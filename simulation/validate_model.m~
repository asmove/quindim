function sol = validate_model(sys, t, x0, u0)
    t0 = tic;
    
    n = length(sys.kin.q);
    
    dt = ;
    
    % Waitbar for the simulation
    wb = my_waitbar('Mechanical system - Simulation');
        
    df_ = @(t_, q_p) df(t_, q_p, sys, t(end), u0, wb);
    cancel_sim = @(t, q_p) cancel_simulation(t, q_p, wb);
    
    % Mass matrix
    opts = odeset('RelTol', 1e-7, 'AbsTol', 1e-7, 'Events', cancel_sim);
    sol = ode45(df_, t, x0, opts);
    
    % Erase waitbar
    tf_acc = evalin('base', 'tf_acc');
    time_scaler = 1.25;
    disp(sprintf('Estimated time is %.6f seconds.', time_scaler*tf_acc(end)));
    
    delete(wb);
    toc(t0);
end

function [value, is_terminal, direction] = cancel_simulation(t, q_p, wb)
    value = getappdata(wb.wb,'canceling');
    is_terminal = 1;
    direction = 0;
end

function dq = df(t, q_p, sys, tf, u0, wb)
    t0 = tic;
    
    dq_p = subs(sys.dyn.f, sys.descrip.syms, sys.descrip.model_params);
    dq_p = subs(sys.dyn.f, sys.descrip.syms, sys.descrip.model_params);
    
    if(iscell(sys.kin.p))
        p = sys.kin.p{end};
    else
        p = sys.kin.p;
    end
    
    qp = [sys.kin.q; p];
    uq_s = [sys.descrip.u; qp];
    uq_n = [u0; q_p];
    
    % Quick hack: double subs
    dq = subs(dq_p, uq_s, uq_n);
    
    dq = double(vpa(dq));
    
    % Time elapsed
    dt = toc(t0);
        
    wb.update_waitbar(time_params, t, tf);
end

